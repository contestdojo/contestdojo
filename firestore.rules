rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userRef() {
      return /databases/$(database)/documents/users/$(request.auth.uid);
    }

    function isGlobalAdmin() {
      return get(userRef()).data.type == "admin";
    }

    match /{document=**} {
      allow read, write: if false;

      match /students/{studentId} {
        allow read: if request.auth != null;
      }
    }

    match /orgs/{orgId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if isGlobalAdmin() || userRef() == resource.data.admin;
    }

    match /users/{userId} {
      // Make sure can't change type
      allow read: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId && request.resource.data.type != "admin";
      allow update: if request.auth.uid == userId && resource.data.type == request.resource.data.type
    }

    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if false;
      allow update, delete: if userRef() in get(resource.data.owner).data.admins;

      function isEventAdmin() {
        return userRef() in get(get(/databases/$(database)/documents/events/$(eventId)).data.owner).data.admins;
      }

      function isOrgAdminOf(orgRef) {
        return userRef() == get(orgRef).data.admin;
      }

      match /orgs/{orgId} {
        allow read: if request.auth != null;
        allow write: if isEventAdmin() || isOrgAdminOf(/databases/$(database)/documents/orgs/$(orgId));
      }

      match /teams/{teamId} {
        allow read: if request.auth != null;
        allow create: if isEventAdmin() || isOrgAdminOf(request.resource.data.org);
        allow update, delete: if isEventAdmin() || isOrgAdminOf(resource.data.org);
      }

      match /students/{studentId} {
        allow read: if request.auth != null;
        allow create: if isEventAdmin() || isOrgAdminOf(request.resource.data.org);
        allow update, delete: if isEventAdmin() || isOrgAdminOf(resource.data.org) || userRef() == resource.data.user;
      }

      match /tests/{testId} {
        allow read: if exists(/databases/$(database)/documents/events/$(eventId)/tests/$(testId)/submissions/$(request.auth.uid));
        allow write: if isEventAdmin();

        match /submissions/{studentId} {
          allow read, update: if isEventAdmin() || request.auth.uid == studentId;
          allow create, delete: if isEventAdmin();
        }
      }
    }

    match /entities/{entityId} {
      allow read: if request.auth != null;
      allow create: if false;
      allow update, delete: if userRef() in resource.data.admins;
    }
  }
}